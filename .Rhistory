knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
#install.package("moments")
#install.package("dplyr")
#install.package("plyr")
#install.package("tidyr")
#install.package("car")
library(readr)
library(moments)
install.packages("moments")
library(readr)
library(moments)
library(plyr)
library(dplyr)
install.packages("dplyr")
library(readr)
library(moments)
library(plyr)
library(dplyr)
library(tidyr)
install.packages("tidyr")
library(readr)
library(moments)
library(plyr)
library(dplyr)
library(tidyr)
library(car)
save_transformed_datatables=T
show_corrupted_file=F
show_uncorrupted_file=F
show_clean_file=F
show_with_and_without_na=F
show_transformed_datatable=F
my_path="./"
setwd(my_path)
getwd()
csv_seperator = ","
s <- readLines("./CandidateDebt.csv")
no_lines = length(s)
if (show_corrupted_file)
{
View(s)
}
old_header = s[[1]]
old_header_split <- strsplit(s[[1]],",")
no_columns = lengths(old_header_split)-1
new_header_split <- c(old_header_split[[1]][0:11],"unknown",old_header_split[[1]][12:no_columns])
(s[[1]] <- paste(new_header_split,sep = "",collapse=","))
writeLines(s, "./CandidateDebt_clean.csv")
if (show_uncorrupted_file)
{
View(s)
}
candidate_debt <- read.table("./CandidateDebt_clean.csv",
na.strings=c("NA"), as.is = T ,
header = TRUE,
sep = ",",
quote = "\"",
dec = ".",
fill = TRUE,
comment.char = "")
if (show_clean_file==T)
{
View(head(candidate_debt))
}
(imported_rows = nrow(candidate_debt))
filter <- unique (unlist (lapply (candidate_debt, function (x) which (x=="#N/A"))))
candidate_debt_clean <- candidate_debt[-(filter),,drop=FALSE]
candidate_debt_bad <- candidate_debt[filter,,drop=FALSE]
if (show_with_and_without_na==T)
{
View(head(candidate_debt_clean))
View(candidate_debt_bad)
}
(clean_rows <- nrow(candidate_debt_clean))
(bad_rows <- nrow(candidate_debt_bad))
assertthat::are_equal(imported_rows,clean_rows+bad_rows)
candidate_debt_transformed <- transform(candidate_debt_clean,
amount = as.numeric(amount),
fromdate = as.Date(fromdate, format = "%m/%d/%Y"),
debtdate = as.Date(debtdate, format = "%m/%d/%Y"),
thrudate = as.Date(thrudate, format = "%m/%d/%Y"),
filertype = as.factor(filertype),
candidate = filername,
office = as.factor(office),
legislativedistrict = as.factor(legislativedistrict),
position = as.factor(position),
party = as.factor(party),
jurisdiction = as.factor(jurisdiction),
jurisdictioncounty = as.factor(jurisdictioncounty),
jurisdictiontype = as.factor(jurisdictiontype),
electionyear = as.factor(electionyear),
code = as.factor(code),
recordtype = as.factor(recordtype),
vendorstate = as.factor(vendorstate),
vendorzip = "")
if (show_transformed_datatable==T)
{
View(head(candidate_debt_transformed))
}
party_cand = by(candidate_debt_transformed$party, candidate_debt_transformed$filername, summary)
head(party_cand, n = 1)
names(candidate_debt_transformed)
summary(candidate_debt_transformed)
str(candidate_debt_transformed)
head(candidate_debt_transformed)
if (save_transformed_datatables==T)
{
save(candidate_debt_transformed,file="candidate_debt_transformed.Rda")
save(candidate_debt_clean,file="candidate_debt_clean.Rda")
save(candidate_debt_bad,file="candidate_debt_bad.Rda")
}
summary(candidate_debt_transformed$office)
summary(candidate_debt_transformed$legislativedistrict)
summary(candidate_debt_transformed$party)
counts <- table(candidate_debt_transformed$party)
barplot(counts, main="Candidate Party Frequency",
xlab="Party", names.arg=c("Democrat", "Independent", "Nonpartisan", "Republican"))
summary(candidate_debt_transformed$jurisdiction)
summary(candidate_debt_transformed$jurisdictioncounty)
summary(candidate_debt_transformed$jurisdictiontype)
counts <- table(candidate_debt_transformed$jurisdictiontype)
barplot(counts, main="Jurisdiction Type Frequency",
xlab="Jurisdiction Type")
summary(candidate_debt_transformed$code)
barplot(counts, main="Code Frequency",
xlab="Code Type")
summary(candidate_debt_transformed$description)
#@Mary -- wanted to make this short so I sorted it and only listed the first 10
description = candidate_debt_transformed$description
description.freq = table(description)
description.freq.top = sort(description.freq, decreasing = T)[0:10]
cbind(description.freq.top)
mean=mean(candidate_debt_transformed$amount)
median=median(candidate_debt_transformed$amount)
max=max(candidate_debt_transformed$amount)
summary(candidate_debt_transformed$amount)
hist(candidate_debt_transformed$amount)
verylowdebt.amount <- as.integer(500)
lowdebt.amount <- as.integer(2000)
veryhighdebt.amount <- as.integer(5000)
outlierdebt.amount <- as.integer(10000)
maxdebt=as.integer(max(candidate_debt_transformed$amount))
candidate_debt_transformed <- candidate_debt_transformed %>%
mutate(debt_category= factor(
dplyr::case_when(amount <= verylowdebt.amount ~ "verylowdebt",
amount > verylowdebt.amount & amount <= lowdebt.amount ~ "lowdebt",
amount > lowdebt.amount & amount <= veryhighdebt.amount ~ "highdebt",
amount > veryhighdebt.amount  ~ "veryhighdebt"), levels=c("verylowdebt","lowdebt","highdebt","veryhighdebt")))
(debt_category.freq <- ftable(candidate_debt_transformed$debt_category))
lowdebt <- subset(candidate_debt_transformed, amount <= lowdebt.amount)
summary(lowdebt$amount)
hist(lowdebt$amount)
verylowdebt <- subset(candidate_debt_transformed, amount <= verylowdebt.amount)
summary(verylowdebt$amount)
hist(verylowdebt$amount)
highdebt <- subset(candidate_debt_transformed, amount >= verylowdebt.amount)
summary(highdebt$amount)
hist(highdebt$amount)
veryhighdebt <- subset(candidate_debt_transformed, amount >= veryhighdebt.amount)
summary(veryhighdebt$amount)
hist(veryhighdebt$amount)
Boxplot(amount ~ debt_category,data=candidate_debt_transformed,id.method="n",id.n=3,main="Boxplots of debt classification vs. debt amount")
#changing filername to 'candidate' because that's what it is and
candidate_debt_transformed$amount = as.numeric(candidate_debt_transformed$amount)
#Let's take a look at total debt by candidate
cand_sum = sort(by(candidate_debt_transformed$amount, candidate_debt_transformed$candidate, sum), decreasing = T)
barplot(cand_sum)
#Let's also check a look at total debt by party
party_sum = sort(by(candidate_debt_transformed$amount, candidate_debt_transformed$party, sum), decreasing = T)
barplot(party_sum)
#Let's also check a look at debt by party divide by number of unique candidats
party_avg = sort(by((candidate_debt_transformed$amount)/length(unique(candidate_debt_transformed$candidate)), candidate_debt_transformed$party, sum), decreasing = T)
barplot(party_avg)
party_avg
mytable = table(candidate_debt_transformed$party, candidate_debt_transformed$debt_category)
print(mytable)
candidate_debt_transformed$my_date = as.Date(candidate_debt_transformed$debtdate, format='%m/%d/%Y')
my_var = by(candidate_debt_transformed$amount,candidate_debt_transformed$my_date, sum)
plot(cumsum(my_var), type="l",
xlab="Date",ylab="Cumulative Debt")
View(candidate_debt_clean)
View(candidate_debt_clean)
candidate_debt_transformed$my_date = as.Date(candidate_debt_transformed$debtdate, format='%m/%d/%Y')
my_var = by(candidate_debt_transformed$amount,candidate_debt_transformed$my_date, sum)
plot(cumsum(my_var), type="l",
xlab="Number of Days",ylab="Cumulative Debt")
#desc_amount = sort(by(candidate_debt_transformed$amount, candidate_debt_transformed$description, sum), decreasing = T)
#print(desc_amount[0:5])
# We can also check what descriptions have the highest avg amount
#avg_desc_amount = sort(by(candidate_debt_transformed$amount, candidate_debt_transformed$description, mean) ,decreasing = T)
#print(avg_desc_amount[0:5])
couns = subset(candidate_debt_transformed, description == "CONSULTING")
c_states = sort(by(couns$amount, couns$vendorstate, sum), decreasing = T)
print(c_states)
states = sort(by(candidate_debt_transformed$amount, candidate_debt_transformed$vendorstate, sum), decreasing = T)
print(states)
x_var = by(candidate_debt_transformed$amount, candidate_debt_transformed$candidate, sum)
y_var = by(candidate_debt_transformed$reportnumber, candidate_debt_transformed$candidate, length)
plot(x_var, y_var,
xlab = "amount", ylab = "number of records",
main = "Number of records vs amount by candidate")
abline(lm(y_var ~ x_var))
summary((lm(y_var ~ x_var)))
candidate_debt_transformed_r = subset(candidate_debt_transformed, party == "REPUBLICAN")
candidate_debt_transformed_d = subset(candidate_debt_transformed, party == "DEMOCRAT")
x_var_r = by(candidate_debt_transformed_r$amount, candidate_debt_transformed_r$candidate, sum)
y_var_r = by(candidate_debt_transformed_r$reportnumber, candidate_debt_transformed_r$candidate, length)
summary((lm(y_var_r ~ x_var_r)))
x_var_d = by(candidate_debt_transformed_d$amount, candidate_debt_transformed_d$candidate, sum)
y_var_d = by(candidate_debt_transformed_d$reportnumber, candidate_debt_transformed_d$candidate, length)
summary((lm(y_var_d ~ x_var_d)))
